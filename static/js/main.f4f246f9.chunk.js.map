{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","pattern","onChange","onError","useState","Math","random","toString","slice","id","touched","setToched","hasRequiredError","hasPatternError","test","htmlFor","classNames","type","placeholder","event","target","onBlur","emptyMovie","NewMovie","props","onAdd","setMovie","errors","setErrors","handleChange","prevMovie","handleErrors","prevErrors","onSubmit","preventDefault","disabled","Object","values","some","error","App","moviesFromServer","setMovies","count","setCount","prevMovies","prevCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4f246f9.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  pattern?: RegExp,\n  onChange?: (name: string, newValue: string) => void,\n  onError?: (name: string, hasError: boolean) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  pattern = /.*/,\n  onChange = () => {},\n  onError = () => {},\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setToched] = useState(false);\n  const hasRequiredError = touched\n    && required\n    && !value;\n\n  const hasPatternError = touched\n    && !(pattern.test(value));\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasRequiredError || hasPatternError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => {\n            onError(name, hasRequiredError || hasPatternError);\n            onChange(name, event.target.value);\n          }}\n          onBlur={() => setToched(true)}\n        />\n      </div>\n\n      {hasRequiredError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n      {!hasRequiredError && hasPatternError && (\n        <p className=\"help is-danger\">{`${label} is incorrect`}</p>\n      )}\n    </div>\n  );\n};\n","import { FormEvent, useState } from 'react';\nimport { TextField } from '../TextField';\n\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (newMovie: Movie) => void;\n};\n\nconst emptyMovie: Movie = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nexport const NewMovie: React.FC<Props> = (props) => {\n  const { onAdd } = props;\n  const [movie, setMovie] = useState(emptyMovie);\n  const [errors, setErrors] = useState({\n    title: true,\n    description: false,\n    imgUrl: true,\n    imdbUrl: true,\n    imdbId: true,\n  });\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n  const handleChange = (name: string, value: string): void => {\n    setMovie(prevMovie => ({\n      ...prevMovie,\n      [name]: value,\n    }));\n  };\n\n  const handleErrors = (name: string, value: boolean): void => {\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n    onAdd(movie);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={movie.title}\n        onChange={handleChange}\n        onError={handleErrors}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={movie.description}\n        onChange={handleChange}\n        onError={handleErrors}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={movie.imgUrl}\n        onChange={handleChange}\n        onError={handleErrors}\n        pattern={pattern}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={movie.imdbUrl}\n        onChange={handleChange}\n        onError={handleErrors}\n        pattern={pattern}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={movie.imdbId}\n        onChange={handleChange}\n        onError={handleErrors}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={Object.values(errors).some(error => error)}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\n\nimport { Movie } from './types/Movie';\n\nimport './App.scss';\n\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n  const [count, setCount] = useState(0);\n\n  const handleAdd = (movie: Movie) => {\n    setMovies(prevMovies => ([\n      ...prevMovies,\n      movie,\n    ]));\n    setCount(prevCount => prevCount + 1);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={handleAdd} key={count} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}